% Term Project
% CSCI: 431 - Computer Vision
% Fall 2022
%
% ak3064 - Aditya Khanna
% arm5020 - Adam Mercer
% cju8676 - Corey Urbanke
function Classify_Ivy( filename )
    addpath('./IMAGES_OTHER_PLANTS/');
    addpath('./IMAGES_of_POISON_IVY/');
    
    % read in image
    im = ( imread( filename ) );
    % [row dimension, column dimension]
    dims = size(im);
    % the pixel in the very center of the image [x, y]
    center = round( dims( 1:2 ) / 2 );

    % info of our circle [row location, col location, circle radius]
    ci = [center(1), center(2), 1000]; 
    % grid wrt our circle location
    [xx,yy] = ndgrid( ( 1:dims(1) ) - ci(1),( 1:dims(2)) - ci(2) );
    % get the pixels inside the circle radius ci(3)
    mask = uint8((xx.^2 + yy.^2) < ci(3)^2);
    im_leaf_center = uint8(zeros(size(im)));
    % mask each of our rgb channels
    im_leaf_center(:,:,1) = im(:,:,1).*mask;
    im_leaf_center(:,:,2) = im(:,:,2).*mask;
    im_leaf_center(:,:,3) = im(:,:,3).*mask;
%     imshow(im_leaf_center);

    % kmeans takes way too long on the full resolution image
    im_smaller = im_leaf_center( 3:3:end, 3:3:end, : );
    s_dims = size(im_smaller);
    % row vectors, column vectors of our image - tells us where a pixel is
    [xs, ys] = meshgrid( 1:s_dims(1), 1:s_dims(2) );

    % Convert our image to CIELAB 
    im_lab = rgb2lab(im_smaller);

    % Store luminance, a*, and b* values to be used for k-means
    lum = im_lab(:,:,1);
    a_star = im_lab(:,:,2);
    b_star = im_lab(:,:,3);

    % Attributes input to k-means, space variables weighted by 1/15
    attributes = [xs(:)/15, ys(:)/15, lum(:), a_star(:), b_star(:)];
    % Timer Start
    tic;
    % Perform kmeans clustering on image
    [cluster_id, centers] = kmeans(attributes, 5, 'MaxIter',250);
    % Timer Stop
    toc;

    % Show our resulting clustered image by reshaping the clusters we got
    % from k-means
    figure;
    im_new = reshape(cluster_id, s_dims(1), s_dims(2));
    imagesc(im_new);
    centers_colors = lab2rgb(centers(:,3:5));
    colormap(centers_colors);
    title("Clustered Image - k = 5, wt = 1/15")
    colorbar;
    drawnow;
    axis image;

    % for now get the cluster with the highest green value
    % this most likely will not work with multiple green clusters (aka one
    % picked up from background)
    [rgb_max, rgb_idx] = max(centers_colors);
    im_new_leaf = (im_new == rgb_idx(2));
    
    % Disk structuring element
    disk = strel('disk', 5);
    % Get rid of black specs on leaf
    im_dilate_leaf = imdilate(im_new_leaf, disk);
    % Label and get number of our different blobs - 4 pixel connectivity
    [L, n] = bwlabel(im_dilate_leaf, 4);

    
    
    figure;
    imagesc(im_dilate_leaf);
    colormap("gray");

end